name: Test & Build

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  actions: read
  checks: write
  contents: write
  deployments: none
  issues: none
  packages: none
  pull-requests: write
  repository-projects: none
  security-events: write
  statuses: none

defaults:
  run:
    shell: bash

jobs:
  test:
    name: Test Workflow
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Run Tests
        run: make unit-test

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@3a74b2957438d0b6e2e61d67b05318aa25c9e6c6 # v2.20.0
        if: ${{ always() }}
        with:
          check_name: "Unit Test Results"
          files: test-results/unit-tests.xml

      - name: Upload Code Coverage
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          files: test-results/test-coverage.txt
          fail_ci_if_error: false
          verbose: true

  lint:
    name: GO lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Run linting
        run: make go-lint
        
  gosec:
    name: Go Sec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
      - name: Go Sec
        continue-on-error: true
        run: make gosec
      - name: Upload GoSec results to GitHub Security tab
        if: ${{ always() }}
        uses: github/codeql-action/upload-sarif@a8d1ac45b9a34d11fe398d5503176af0d06b303e # v3
        with:
          sarif_file: 'test-results/gosec.sarif'
          category: gosec

  cypress:
    name: Cypress
    runs-on: ubuntu-latest
    needs: ['test', 'lint', 'gosec']
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Run cypress
        run: make cypress
      - name: Store screenshots
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots
      - name: Store logs
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: failure()
        with:
          name: cypress-logs
          path: cypress/logs

  create-tag:
    name: Create Tags
    uses: ./.github/workflows/create-tags.yml

  build:
    name: Build Sirius Workflow
    uses: ministryofjustice/opg-github-workflows/.github/workflows/build-multi-architecture-image.yml@27a0f72b83c6b026fa4131230289bfbed9049cc7 # v3.15.0
    with:
      image_name: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/sirius-workflow
      build_options: --file docker/sirius-workflow/Dockerfile

  push:
    name: "Push Images"
    runs-on: ubuntu-latest
    needs: ['test', 'lint', 'gosec', 'create-tag', 'build']
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: '0'
      - uses: unfor19/install-aws-cli-action@f5b46b7f32cf5e7ebd652656c5036bf83dd1e60c # 1.0.8

      - name: Set up Docker
        run: |
          echo '{"experimental": true, "features": { "containerd-snapshotter": true }}' | sudo tee -a /etc/docker/daemon.json
          sudo systemctl restart docker
          docker run --privileged --rm tonistiigi/binfmt --install all
      - uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          path: /tmp/images
          name: multi-arch-image
      - name: Load Images
        run: |
          docker load -i /tmp/images/multi-arch-image.tar

      - name: Run Trivy vulnerability scanner
        run: make scan

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@192325c86100d080feab897ff886c34abd4c83a3 # v3.30.3
        with:
          sarif_file: 'test-results/trivy.sarif'
          category: trivy-docker-workflow

      - name: Configure OIDC AWS credentials for ECR push
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5.0.0
        with:
          role-to-assume: arn:aws:iam::311462405659:role/sirius-component-ecr-role
          role-session-name: opg-sirius-supervision-workflow-github-actions-ecr-push
          role-duration-seconds: 900
          aws-region: eu-west-1

      - name: ECR Login
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@062b18b96a7aff071d4dc91bc00c4c1a7945b076 # v2.0.1
        with:
          registries: 311462405659

      - name: Push
        run: |
          docker tag 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/sirius-workflow:latest 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/sirius-workflow:${{ needs.create-tag.outputs.tag }}
          if ${{ github.ref_name == 'main' }}
          then
            docker tag 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/sirius-workflow:latest 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/sirius-workflow:main-${{ needs.create-tag.outputs.tag }}
            docker tag 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/sirius-workflow:latest 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/sirius-workflow:main-${{ needs.create-tag.outputs.tag }}-${{ needs.create-tag.outputs.timestamp }}
            # We want all of the tags pushed
            docker push  --all-tags 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/sirius-workflow
          else
            docker push 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/sirius-workflow:${{ needs.create-tag.outputs.tag }}
          fi

  end_of_pr_workflow:
    name: End of PR Workflow
    runs-on: ubuntu-latest
    if: always()
    needs: ['test', 'lint', 'gosec', 'cypress', 'create-tag', 'build', 'push']
    steps:
      - name: End of PR Workflow
        run: |
          if ${{ contains(needs.*.result,'failure') }}
          then
            echo "Not all checks succedeed, check the previous jobs."
            exit 1
          else
            echo "All checks succedeed!"
            exit 0
          fi

  push-tags:
    runs-on: ubuntu-latest
    needs: ['create-tag', 'end_of_pr_workflow']
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Configure OIDC AWS credentials for SSM
        uses: aws-actions/configure-aws-credentials@a03048d87541d1d9fcf2ecf528a4a65ba9bd7838 # v5.0.0
        with:
          role-to-assume: arn:aws:iam::997462338508:role/sirius-component-ssm-role
          role-session-name: opg-sirius-supervision-workflow-github-actions-ssm-push
          role-duration-seconds: 900
          aws-region: eu-west-1

      - name: Install AWS CLI
        id: install-aws-cli
        uses: unfor19/install-aws-cli-action@f5b46b7f32cf5e7ebd652656c5036bf83dd1e60c # 1.0.8

      - name: Push Tag to Parameter Store
        run: |
          aws ssm put-parameter --name "opg-sirius-supervision-workflow-latest-green-build" --type "String" --value "${{ needs.create-tag.outputs.tag }}" --overwrite --region=eu-west-1

      - name: Trigger Dev Deploy
        shell: bash
        run: curl -u ${{ secrets.JENKINS_API_USER }}:${{ secrets.JENKINS_API_TOKEN }} "https://${{ secrets.JENKINS_URL }}/job/Sirius/job/Deploy_to_Development/build?token=${{ secrets.JENKINS_API_TOKEN_NAME }}&cause=Triggered+by+opg-sirius-supervision-workflow"
